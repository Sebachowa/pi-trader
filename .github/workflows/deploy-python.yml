name: Deploy Trading Bot to Raspberry Pi

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-pi.txt
      
      - name: Test scanner
        run: |
          # Basic import test
          python -c "from core.market_scanner import MarketScanner; print('‚úÖ Scanner OK')"
          python -c "from core.engine import TradingEngine; print('‚úÖ Engine OK')"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to Raspberry Pi
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.PI_HOST }}
          username: ${{ secrets.PI_USER }}
          key: ${{ secrets.PI_SSH_KEY }}
          script: |
            # Backup current version
            if [ -d ~/trader ]; then
              cp -r ~/trader ~/trader.backup.$(date +%Y%m%d_%H%M%S)
            fi
            
            # Clone or pull latest
            if [ ! -d ~/trader ]; then
              git clone https://github.com/${{ github.repository }}.git ~/trader
            else
              cd ~/trader
              git pull origin main
            fi
            
            # Setup Python environment
            cd ~/trader
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements-pi.txt
            
            # Restart service
            sudo systemctl restart trader || echo "Service not yet configured"
            
            echo "‚úÖ Deployment complete!"
      
      - name: Health Check
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.PI_HOST }}
          username: ${{ secrets.PI_USER }}
          key: ${{ secrets.PI_SSH_KEY }}
          script: |
            cd ~/trader
            source venv/bin/activate
            python -c "print('üöÄ Bot is ready!')"
            
            # Check if service is running
            if systemctl is-active --quiet trader; then
              echo "‚úÖ Service is running"
              sudo journalctl -u trader -n 10 --no-pager
            else
              echo "‚ö†Ô∏è Service not running (configure with: sudo systemctl enable trader)"
            fi